name: Deploy with jDeploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set working directory
      run: echo "Working from hotel-app-utp/hotelapp"
      working-directory: hotel-app-utp/hotelapp
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Cache node modules
      uses: actions/cache@v4
      with:
        path: hotel-app-utp/hotelapp/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('hotel-app-utp/hotelapp/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      working-directory: hotel-app-utp/hotelapp
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci
        else
          npm install
        fi

    - name: Build project
      working-directory: hotel-app-utp/hotelapp
      run: |
        if grep -q '"build"' package.json; then
          npm run build
        else
          echo "No build script, skipping"
        fi

    - name: Install jDeploy globally
      run: npm install -g jdeploy
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    - name: Configure jDeploy
      working-directory: hotel-app-utp/hotelapp
      run: |
        if [ ! -f "jdeploy.js" ] && [ ! -f "jdeploy.json" ]; then
          jdeploy init --non-interactive
        fi

    - name: Verify jDeploy configuration
      working-directory: hotel-app-utp/hotelapp
      run: |
        if [ -f "jdeploy.js" ]; then
          echo "Found jdeploy.js"
        elif [ -f "jdeploy.json" ]; then
          echo "Found jdeploy.json"
        else
          echo "No jDeploy configuration found!"
          exit 1
        fi

    - name: Deploy with jDeploy
      working-directory: hotel-app-utp/hotelapp
      run: jdeploy publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: jdeploy-artifacts-${{ github.run_number }}
        path: |
          hotel-app-utp/hotelapp/dist/
          hotel-app-utp/hotelapp/*.jar
          hotel-app-utp/hotelapp/jdeploy/
          hotel-app-utp/hotelapp/package.json
          hotel-app-utp/hotelapp/jdeploy.js
          hotel-app-utp/hotelapp/jdeploy.json
        retention-days: 30

    - name: Create deployment summary
      if: success()
      working-directory: hotel-app-utp/hotelapp
      run: |
        echo "## ðŸš€ Deployment Successful" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **jDeploy Version**: $(jdeploy --version)" >> $GITHUB_STEP_SUMMARY
