/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.ande.luxury.hotelapp.views;

import com.ande.luxury.hotelapp.entities.HotelRoom;
import com.ande.luxury.hotelapp.services.BookingService;
import com.ande.luxury.hotelapp.utilsdb.DialogUtils;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author bryanvislaochavez
 */
public class Reservas_CheckIn extends javax.swing.JInternalFrame {

    private static final Logger logger = LoggerFactory.getLogger(Reservas_CheckIn.class);
    private String userLogin;
    private List<HotelRoom> rooms;

    /**
     * Creates new form Reservas_CheckIn
     */
    public Reservas_CheckIn() {

        initComponents();

        setTitle("CheckIn - Habitaciones");
        setSize(500, 300);

        // Inicializar panel y lista de habitaciones
        rooms = new ArrayList<>();

        initializeRooms();
        createRoomButtons();

        // Agregar panel a un JScrollPane por si hay muchas habitaciones
        JScrollPane scrollPane = new JScrollPane(roomPanelView);
        add(scrollPane, BorderLayout.CENTER);
    }

    public Reservas_CheckIn(String userLogin) {
        initComponents();
        setSize(500, 500);
        this.userLogin = userLogin;
        setTitle("Gestión de Habitaciones Check-In Habitaciones");

        // Inicializar panel y lista de habitaciones
        initializeRooms();
        createRoomButtons();
        // Agregar panel a un JScrollPane por si hay muchas habitaciones

        // Forzar revalidación y repintado
        roomPanelView.revalidate();
        roomPanelView.repaint();
    }

    public void refresh() {

        roomPanelView.removeAll();
        // Inicializar panel y lista de habitaciones
        initializeRooms();
        createRoomButtons();

        // Forzar revalidación y repintado
        roomPanelView.revalidate();
        roomPanelView.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomPanelView = new javax.swing.JPanel();

        setTitle("Ande Luxury :: CheckIn");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roomPanelView.setBackground(new java.awt.Color(102, 102, 102));
        getContentPane().add(roomPanelView, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 16, 480, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //TEST
    private void initializeRooms() {
        BookingService bookingService = new BookingService();
        rooms = bookingService.findAll();

    }

    private void createRoomButtons() {
        for (HotelRoom room : rooms) {
            JButton button = new JButton();
            button.setPreferredSize(new Dimension(80, 80));
            button.setBackground(room.isReserved() ? Color.RED : Color.GREEN);
            button.setOpaque(true);
            button.setBorderPainted(false);
            StringBuilder strText = new StringBuilder();
            strText.append(room.getRoomNumber().toString());
            button.setText(
                    strText.toString());

            // Acción del botón
            // Acción del botón con lambda
            button.addActionListener(e -> {
                if (!room.isReserved()) {
                    Reservas_CheckIn_New newReserva = new Reservas_CheckIn_New(
                            userLogin,
                            room.getRoomNumber().toString() + " - " + room.getRoomType().getDescription().toUpperCase(),
                            room,
                            this // Aquí sí funciona "this"
                    );
                    newReserva.setVisible(true);
                } else {
                    // Confirmación
                    if (DialogUtils.showConfirmation(roomPanelView, "Alerta", "Habitación ocupada ¿Desea ver el detalle?")) {
                        //confirmó
                        Reservas_CheckIn_Detail detailBooking = new Reservas_CheckIn_Detail(room);
                        detailBooking.setVisible(true);

                    }

                }
            });
            roomPanelView.add(button);
        }
    }

    private void showReservationForm(String roomNumber) {
        // Crear un nuevo JFrame para el formulario de reserva
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel roomPanelView;
    // End of variables declaration//GEN-END:variables
}
