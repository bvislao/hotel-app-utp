/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.ande.luxury.hotelapp.views;

import com.ande.luxury.hotelapp.entities.HotelRoom;
import com.ande.luxury.hotelapp.services.BookingService;
import com.ande.luxury.hotelapp.utilsdb.DialogUtils;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.SwingWorker;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author bryanvislaochavez
 */
public class Reservas_CheckIn extends javax.swing.JInternalFrame {

    private static final Logger logger = LoggerFactory.getLogger(Reservas_CheckIn.class);
    private String userLogin;
    private List<HotelRoom> rooms;
    private Map<Integer, JButton> roomButtonMap = new HashMap<>();
    private Reservas_CheckIn_New reservaForm = null;
    private Reservas_CheckIn_Detail detailForm = null;

    /**
     * Creates new form Reservas_CheckIn
     */
    public Reservas_CheckIn() {

        initComponents();
        setTitle("CheckIn - Habitaciones");
        setSize(500, 300);

        // Inicializar panel y lista de habitaciones
        rooms = new ArrayList<>();

        initializeRooms();
        createRoomButtons();

    }

    public Reservas_CheckIn(String userLogin) {
        initComponents();
        setSize(500, 500);
        this.userLogin = userLogin;
        setTitle("Gesti√≥n de Habitaciones Check-In Habitaciones");
        // Inicializar panel y lista de habitaciones
        initializeRooms();
        createRoomButtons();

    }

    private void showLoadingIndicator() {
        roomPanelView.removeAll();
        roomPanelView.add(new JLabel("Cargando.", SwingConstants.CENTER));
        roomPanelView.revalidate();
        roomPanelView.repaint();
    }

    public void refresh() {
         initializeRooms();
        createRoomButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomPanelView = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Ande Luxury :: CheckIn");
        setSize(new java.awt.Dimension(56, 56));

        roomPanelView.setBackground(new java.awt.Color(102, 102, 102));
        roomPanelView.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        roomPanelView.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        roomPanelView.setName(""); // NOI18N
        roomPanelView.setRequestFocusEnabled(false);

        javax.swing.GroupLayout roomPanelViewLayout = new javax.swing.GroupLayout(roomPanelView);
        roomPanelView.setLayout(roomPanelViewLayout);
        roomPanelViewLayout.setHorizontalGroup(
            roomPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        roomPanelViewLayout.setVerticalGroup(
            roomPanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 607, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Ocupado");

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));
        jPanel2.setVerifyInputWhenFocusTarget(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setText("Disponible");

        jPanel1.setBackground(new java.awt.Color(51, 255, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Leyenda");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2))
                .addContainerGap(467, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(roomPanelView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(roomPanelView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        roomPanelView.getAccessibleContext().setAccessibleParent(roomPanelView);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //TEST
    private void initializeRooms() {
        rooms = new ArrayList<>();
        showLoadingIndicator();
        SwingWorker<List<HotelRoom>, Void> worker = new SwingWorker<>() {
            @Override
            protected List<HotelRoom> doInBackground() {
                BookingService bookingService = new BookingService();
                return bookingService.findAll();
            }

            @Override
            protected void done() {
                try {
                    rooms = get();
                    createRoomButtons();
                } catch (Exception e) {
                    logger.error("Error loading rooms", e);
                    DialogUtils.showError(roomPanelView, "Error", "Failed to load rooms");
                }
            }
        };
        worker.execute();
    }

    private JButton createRoomButton(HotelRoom room) {
        JButton button = new JButton(room.getRoomNumber().toString());
        button.setPreferredSize(new Dimension(80, 80));
        button.setBackground(room.isReserved() ? Color.RED : Color.GREEN);
        button.setOpaque(true);
        button.setBorderPainted(false);
        boolean isReservedData = room.isReserved();
        button.addActionListener(e -> {
            if (!isReservedData) {
                if (reservaForm == null || !reservaForm.isVisible()) {
                    reservaForm = new Reservas_CheckIn_New(userLogin,
                            room.getRoomNumber() + " - " + room.getRoomType().getDescription().toUpperCase(),
                            room, this);
                    reservaForm.setVisible(true);
                } else {
                    reservaForm.toFront();
                }
            } else {
                if (DialogUtils.showConfirmation(roomPanelView, "Alerta", "Habitaci√≥n ocupada ¬øDesea ver el detalle?")) {
                    if (detailForm == null || !detailForm.isVisible()) {
                        try {
                            detailForm = new Reservas_CheckIn_Detail(room, userLogin, this);
                        } catch (Exception ex) {
                            java.util.logging.Logger.getLogger(Reservas_CheckIn.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        detailForm.setVisible(true);
                    } else {
                        detailForm.toFront();
                    }
                }
            }
        });

        return button;
    }

    private void createRoomButtons() {
        roomPanelView.removeAll();
        roomPanelView.setVisible(false);
        roomPanelView.setSize(new Dimension(500, 500));
        // Set a layout to optimize rendering
        roomPanelView.setLayout(new GridLayout(3, 4, 0, 0)); // 5 columns, adjustable gap
        
        if (rooms != null) {
            for (HotelRoom room : rooms) {
                JButton button = roomButtonMap.getOrDefault(room.getRoomNumber(), createRoomButton(room));
                button.setBackground(room.isReserved() ? Color.RED : Color.GREEN);
                roomButtonMap.put(room.getRoomNumber(), button);
                if (button.getParent() == null) {
                    roomPanelView.add(button);
                }
            }
        }

        // Check if roomPanelView is already wrapped in a JScrollPane
        roomPanelView.setVisible(true);
        roomPanelView.revalidate();
        roomPanelView.repaint();
    }
    
       private void createRoomButtonsRefresh() {
        roomPanelView.removeAll();
        roomPanelView.setVisible(false);
        roomPanelView.setSize(new Dimension(500, 500));
        // Set a layout to optimize rendering
        roomPanelView.setLayout(new GridLayout(3, 4, 0, 0)); // 5 columns, adjustable gaps
        rooms = new ArrayList<>();
         BookingService bookingService = new BookingService();
         rooms = bookingService.findAll();
        
        if (rooms != null) {
            for (HotelRoom room : rooms) {
                JButton button = roomButtonMap.getOrDefault(room.getRoomNumber(), createRoomButton(room));
                button.setBackground(room.isReserved() ? Color.RED : Color.GREEN);
                roomButtonMap.put(room.getRoomNumber(), button);
                if (button.getParent() == null) {
                    roomPanelView.add(button);
                }
            }
        }

        // Check if roomPanelView is already wrapped in a JScrollPane
        roomPanelView.setVisible(true);
        roomPanelView.revalidate();
        roomPanelView.repaint();
    }

    private void showReservationForm(String roomNumber) {
        // Crear un nuevo JFrame para el formulario de reserva
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel roomPanelView;
    // End of variables declaration//GEN-END:variables
}
