/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.ande.luxury.hotelapp.views;

import com.ande.luxury.hotelapp.entities.HotelRoom;
import com.ande.luxury.hotelapp.services.HotelRoomService;
import static com.ande.luxury.hotelapp.utilsdb.Constants.formatCurrency;
import com.ande.luxury.hotelapp.utilsdb.DialogUtils;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.slf4j.LoggerFactory;

/**
 *
 * @author bryanvislaochavez
 */
public class Habitacion_Gestion extends javax.swing.JInternalFrame {

    private static final org.slf4j.Logger logger = LoggerFactory.getLogger(Habitacion_Gestion.class);
    private static String userLogin;
    /**
     * Creates new form Habitacion_Gestion
     */
    public Habitacion_Gestion() {
        initComponents();
    }
    
    public Habitacion_Gestion(String userLogin){
        initComponents();
        this.userLogin = userLogin;
         String[] columns = {"UUID", "#", "Tipo", "Aforo", "Precio x Hora","Precio x Noche","Ocupado","Estado"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        HotelRoomService service = new HotelRoomService();
        List<HotelRoom> listRoom = service.findAll();
        for(HotelRoom item : listRoom){
            Object[] row = new Object[]{
                    item.getUuid(),
                    item.getRoomNumber().toString(),
                    item.getRoomTypeDescription(),
                    item.getCapacity(),
                    formatCurrency(item.getPricePerHour()),
                    formatCurrency(item.getPricePerNight()),
                    item.getIsReservedStr(),
                    item.getActiveStr()
                };
                model.addRow(row);
        }
        
        jTablaHabitaciones.setModel(model);
            // Refrescar la vista
        jTablaHabitaciones.revalidate();
        jTablaHabitaciones.repaint();
    }
    
    public void refresh(){
          String[] columns = {"UUID", "#", "Tipo", "Aforo", "Precio x Hora","Precio x Noche","Ocupado","Estado"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        HotelRoomService service = new HotelRoomService();
        List<HotelRoom> listRoom = service.findAll();
        for(HotelRoom item : listRoom){
            Object[] row = new Object[]{
                    item.getUuid(),
                    item.getRoomNumber().toString(),
                    item.getRoomTypeDescription(),
                    item.getCapacity(),
                    formatCurrency(item.getPricePerHour()),
                    formatCurrency(item.getPricePerNight()),
                    item.getIsReservedStr(),
                    item.getActiveStr()
                };
                model.addRow(row);
        }
        
        jTablaHabitaciones.setModel(model);
            // Refrescar la vista
        jTablaHabitaciones.revalidate();
        jTablaHabitaciones.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnCrear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaHabitaciones = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setTitle("Ande Luxury :: Gestion Habitación");
        setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("GESTIONAR HABITACIÓN");

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Hotel Ande Luxury");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(357, 357, 357))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        btnCrear.setBackground(new java.awt.Color(0, 255, 51));
        btnCrear.setForeground(new java.awt.Color(0, 0, 0));
        btnCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/new.png"))); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.setToolTipText("Nuevo Cliente");
        btnCrear.setDisabledIcon(null);
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        jTablaHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTablaHabitaciones.setShowGrid(true);
        jTablaHabitaciones.getTableHeader().setResizingAllowed(false);
        jTablaHabitaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTablaHabitaciones);
        jTablaHabitaciones.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnEditar.setBackground(new java.awt.Color(0, 255, 51));
        btnEditar.setForeground(new java.awt.Color(0, 0, 0));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setToolTipText("Nuevo Cliente");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(0, 255, 51));
        btnEliminar.setForeground(new java.awt.Color(0, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Nuevo Cliente");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCrear)
                .addGap(26, 26, 26)
                .addComponent(btnEditar)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // TODO add your handling code here:
        Habitacion_Mantenimiento form;
        try {
            form = new Habitacion_Mantenimiento(userLogin,this);
            form.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Habitacion_Gestion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTablaHabitaciones.getSelectedRow();
        if (filaSeleccionada != -1) { // Verifica que haya una fila seleccionada
              Object valorColumna0 = jTablaHabitaciones.getValueAt(filaSeleccionada, 0);
              HotelRoomService hotelRoomService = new HotelRoomService();
              HotelRoom dataRoom = hotelRoomService.findByUuid(valorColumna0.toString());


        }else{
            DialogUtils.showWarning(null, "Aviso", "No tiene seleccionado ningun registro");
        }
        

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
         int filaSeleccionada = jTablaHabitaciones.getSelectedRow();
        if (filaSeleccionada != -1) { // Verifica que haya una fila seleccionada
            Object valorColumna6 = jTablaHabitaciones.getValueAt(filaSeleccionada, 6);
            if(valorColumna6.equals("Si")){
                DialogUtils.showWarning(null, "Aviso", "No puede eliminar el cuarto ya que se encuentra ocupada");
                return;
            }
            Object valorColumna0 = jTablaHabitaciones.getValueAt(filaSeleccionada, 0);
            HotelRoomService hotelRoomService = new HotelRoomService();
            hotelRoomService.delete(valorColumna0.toString());
            DialogUtils.showSuccess(null, "Aviso", "Habitación eliminada correctamente.");
            refresh();
        }else{
            DialogUtils.showWarning(null, "Aviso", "No tiene seleccionado ningun registro");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaHabitaciones;
    // End of variables declaration//GEN-END:variables
}
