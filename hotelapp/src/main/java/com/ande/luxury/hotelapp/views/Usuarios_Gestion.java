/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.ande.luxury.hotelapp.views;

import com.ande.luxury.hotelapp.entities.Usuario;
import com.ande.luxury.hotelapp.services.UsuarioService;
import com.ande.luxury.hotelapp.utilsdb.ButtonEditor;
import com.ande.luxury.hotelapp.utilsdb.ButtonRenderer;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author bryanvislaochavez
 */
public class Usuarios_Gestion extends javax.swing.JInternalFrame {

    private static final Logger logger = LoggerFactory.getLogger(Usuarios_Gestion.class);

    /**
     * Creates new form Usuarios_Gestion
     */
    public Usuarios_Gestion() {
        initComponents();
        getDataInit();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCrearUsuario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Gestión de Usuarios");

        btnCrearUsuario.setBackground(new java.awt.Color(102, 255, 102));
        btnCrearUsuario.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnCrearUsuario.setForeground(new java.awt.Color(0, 102, 102));
        btnCrearUsuario.setText("Crear Usuario");
        btnCrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearUsuarioActionPerformed(evt);
            }
        });

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableUsuarios.setEditingColumn(0);
        jTableUsuarios.setEditingRow(0);
        jScrollPane1.setViewportView(jTableUsuarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1))
            .addGroup(layout.createSequentialGroup()
                .addGap(732, 732, 732)
                .addComponent(btnCrearUsuario))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(btnCrearUsuario)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void refrescarTabla() {
        // Si usas DefaultTableModel
        DefaultTableModel model = (DefaultTableModel) jTableUsuarios.getModel();
        model.setRowCount(0); // Limpiar tabla

        // Recargar datos desde la base de datos
        getDataInit();

        // Refrescar la vista
        jTableUsuarios.revalidate();
        jTableUsuarios.repaint();
    }


    private void btnCrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearUsuarioActionPerformed
        // TODO add your handling code here:
        //Usuario_Nuevo form = new Usuario_Nuevo();
        //form.setVisible(true);
        Usuarios_Crear form = new Usuarios_Crear(this);
        form.setVisible(true);
    }//GEN-LAST:event_btnCrearUsuarioActionPerformed

    public void getDataInit() {
        try {
            UsuarioService usuarioService = new UsuarioService();
            List<Usuario> listUsuarios = usuarioService.listUsers();
            String[] columns = {"ID", "Numero Documento", "Nombre Completo", "Rol", "Password", "Telefono", "Email", "Editar", "Eliminar"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);

            for (Usuario user : listUsuarios) {
                String roles = "";
                if (user.getRoles() != null) {
                    if(!user.getRoles().isEmpty()){
                        roles = user.getRoles().getFirst()  == null ? "" : user.getRoles().getFirst().getDescription().toUpperCase();
                    }
                }
                Object[] row = new Object[]{
                    user.getUuid(),
                    user.getDocumentNumber(),
                    user.getFullName(),
                    roles,
                    user.getPassword(),
                    user.getPhone(),
                    user.getEmail(),
                    "Editar", "Eliminar"
                };
                model.addRow(row);
            }
            jTableUsuarios.setModel(model);

            jTableUsuarios.getColumnModel().getColumn(7).setCellRenderer(new ButtonRenderer("Editar"));
            jTableUsuarios.getColumnModel().getColumn(7).setCellEditor(new ButtonEditor(new JCheckBox(), jTableUsuarios, "Editar", this));

            jTableUsuarios.getColumnModel().getColumn(8).setCellRenderer(new ButtonRenderer("Eliminar"));
            jTableUsuarios.getColumnModel().getColumn(8).setCellEditor(
                    new ButtonEditor(
                            new JCheckBox(), jTableUsuarios, "Eliminar", this));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado");
            logger.error(ex.getMessage());
        }

    }

    public void editarFilaEnFormularioPadre(int row) {
        String uuid = (String) jTableUsuarios.getValueAt(row, 0);
        JOptionPane.showMessageDialog(this, "Editar: " + uuid);
    }

    public void eliminarFilaEnFormularioPadre(int row) {
        String uuid = (String) jTableUsuarios.getValueAt(row, 0);
        int confirm = JOptionPane.showConfirmDialog(this, "¿Eliminar a " + (String) jTableUsuarios.getValueAt(row, 2) + "?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            ((DefaultTableModel) jTableUsuarios.getModel()).removeRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuarios;
    // End of variables declaration//GEN-END:variables
}
